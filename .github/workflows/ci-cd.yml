name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  NODE_VERSION: "18"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: "npm"

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint
      continue-on-error: true

    - name: Run tests
      run: npm test
      continue-on-error: false

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: "npm"

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          dist/
          build/
          public/
        retention-days: 7

  deploy:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: "npm"

    - name: Install dependencies
      run: npm ci

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files

    - name: Rebuild if artifacts missing
      run: |
        if [ ! -d "dist" ] && [ ! -d "build" ]; then
          echo "Build artifacts not found, rebuilding..."
          npm run build
        fi

    - name: Deploy to Firebase
      uses: w9jds/firebase-action@v13.22.1
      with:
        args: deploy --only hosting,functions --force
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
